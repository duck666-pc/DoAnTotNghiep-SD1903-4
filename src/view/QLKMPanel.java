/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view;
        
import javax.swing.SwingUtilities;
import model.KhuyenMai;
import model.SanPham;
import model.KhachHang;
import controller.QLKMDAO;
import controller.QLKHDAO;
import controller.QLSPDAO;
import java.sql.SQLException;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.util.ArrayList;
import java.sql.Date;
import java.util.stream.Collectors;

public abstract class QLKMPanel extends BasePanel<SanPham> {
    private DefaultTableModel tablekh;
    private DefaultTableModel tablesp;
    private DefaultTableModel tablekm;
    /**
     * Creates new form QLKMPanel
     */
    public QLKMPanel() {
        initComponents();
        initTablekh();
        initTableSP();
        initTableKM();
        fillTablekh();
        fillTableSP();
        fillTableKM();
    }
    
    private final QLKHDAO qlkh = new QLKHDAO();
    private final QLSPDAO qlsp = new QLSPDAO();
    private final QLKMDAO qlkm = new QLKMDAO();
    private ArrayList<String> khid;
    private ArrayList<String> spid;
    
    
        private void initTablekh() {
        // Cột đồng nhất tên
        String[] cols = new String[]{"Chọn", "ID", "Tên", "Điện Thoại", "Địa Chỉ", "ID Hạng Khách Hàng"};
        tablekh = new DefaultTableModel(null, cols) {
            @Override
            public Class<?> getColumnClass(int columnIndex) {
                if (columnIndex == 0) return Boolean.class;
                return String.class;
            }
            @Override
            public boolean isCellEditable(int row, int column) {
                return column == 0;
            }
        };
    }
    

    private void fillTablekh() {
        tablekh.setRowCount(0);
        try {
            List<KhachHang> listKH = qlkh.getAll();
            for (KhachHang kh : listKH) {
                Object[] row = new Object[]{
                    false,
                    kh.getId(),
                    kh.getTen(),
                    kh.getDienThoai(),
                    kh.getDiaChi(),
                    kh.gethangKhachHangId()
                };
                tablekh.addRow(row);
            }
        } catch (SQLException | ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(this, "Lỗi khi tải dữ liệu: " + ex.getMessage());
        }
    }
    
    private void initTableSP() {
    String[] cols = new String[]{"ID", "Tên sản phẩm", "Đơn giá", "Số lượng"};
    tablesp = new DefaultTableModel(null, cols) {
        @Override
        public boolean isCellEditable(int row, int column) {
            return false;
        }
    };
    }
    
    private void fillTableSP() {
    tablesp.setRowCount(0);
    try {
        List<SanPham> listSP = qlsp.getAll();
        for (SanPham sp : listSP) {
            Object[] row = new Object[]{
             sp.getId(),
            sp.getTen(),
            sp.getMoTa(),
            sp.getGia(),
            sp.getLoaiSanPham()
            };
            tablesp.addRow(row);
        }
    } catch (SQLException | ClassNotFoundException ex) {
        JOptionPane.showMessageDialog(this, "Lỗi khi tải dữ liệu sản phẩm: " + ex.getMessage());
    }
    }
    
    private void initTableKM() {
    String[] cols = new String[]{"ID", "Mô tả", "Thời gian áp dụng", "Thời gian kết thúc", "Hình thức giảm", "Giá trị giảm", "Quà tặng"};
    tablekm = new DefaultTableModel(null, cols) {
        @Override
        public boolean isCellEditable(int row, int column) {
            return false;
        }
    };
    }
    
    private void fillTableKM() {
    tablekm.setRowCount(0);
    try {
        List<KhuyenMai> listKM = qlkm.getAllKM();
        for (KhuyenMai km : listKM) {
            Object[] row = new Object[]{
            km.getId(),
            km.getChiTietid(),
            km.getKhachHangid(),
            km.getTen(),
            km.getMoTa(),
            km.getSoLuong(),
            km.getThoiGianApDung(),
            km.getThoiGianKetThuc()
            };
            tablekm.addRow(row);
        }
    } catch (SQLException | ClassNotFoundException ex) {
        JOptionPane.showMessageDialog(this, "Lỗi khi tải dữ liệu khuyến mãi: " + ex.getMessage());
    }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popupMenu1 = new java.awt.PopupMenu();
        popupMenu2 = new java.awt.PopupMenu();
        popupMenu3 = new java.awt.PopupMenu();
        txtDiaChi = new javax.swing.JTextField();
        txtHangKhachHang = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();
        jbtThem = new javax.swing.JButton();
        jbtSua = new javax.swing.JButton();
        jbtXoa = new javax.swing.JButton();
        txtTimKiem = new javax.swing.JTextField();
        jbtTimKiem = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtTen = new javax.swing.JTextField();
        txtID = new javax.swing.JTextField();
        jbtLamMoi = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtHangKhachHang1 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jcbNgaySinh = new javax.swing.JComboBox<>();
        jcbThangSinh = new javax.swing.JComboBox<>();
        jcbNamSinh = new javax.swing.JTextField();
        jcbNgaySinh1 = new javax.swing.JComboBox<>();
        jcbThangSinh1 = new javax.swing.JComboBox<>();
        jcbNamSinh1 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jcbNgaySinh2 = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        jcbNgaySinh3 = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jbtKhachHang = new javax.swing.JButton();
        jbtSanPham = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        Select = new javax.swing.JButton();

        popupMenu1.setLabel("popupMenu1");

        popupMenu2.setLabel("popupMenu2");

        popupMenu3.setLabel("popupMenu3");

        setBackground(new java.awt.Color(255, 255, 255));

        txtDiaChi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDiaChiActionPerformed(evt);
            }
        });

        txtHangKhachHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHangKhachHangActionPerformed(evt);
            }
        });

        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Tên", "Điện Thoại", "Địa Chỉ", "ID Hạng Khách Hàng"
            }
        ));
        jScrollPane1.setViewportView(jTable);

        jbtThem.setBackground(new java.awt.Color(41, 62, 80));
        jbtThem.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jbtThem.setForeground(new java.awt.Color(255, 255, 255));
        jbtThem.setText("Thêm");
        jbtThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtThemActionPerformed(evt);
            }
        });

        jbtSua.setBackground(new java.awt.Color(41, 62, 80));
        jbtSua.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jbtSua.setForeground(new java.awt.Color(255, 255, 255));
        jbtSua.setText("Sửa");
        jbtSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtSuaActionPerformed(evt);
            }
        });

        jbtXoa.setBackground(new java.awt.Color(41, 62, 80));
        jbtXoa.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jbtXoa.setForeground(new java.awt.Color(255, 255, 255));
        jbtXoa.setText("Xóa");
        jbtXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtXoaActionPerformed(evt);
            }
        });

        txtTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTimKiemActionPerformed(evt);
            }
        });

        jbtTimKiem.setText("Tìm kiếm bằng ID");
        jbtTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtTimKiemActionPerformed(evt);
            }
        });

        jLabel1.setText("ID:");

        jLabel2.setText("ID chi tiết:");

        jLabel3.setText("Mô tả:");

        jLabel5.setText("Tên:");

        txtTen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTenActionPerformed(evt);
            }
        });

        txtID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDActionPerformed(evt);
            }
        });

        jbtLamMoi.setBackground(new java.awt.Color(41, 62, 80));
        jbtLamMoi.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jbtLamMoi.setForeground(new java.awt.Color(255, 255, 255));
        jbtLamMoi.setText("Làm mới");
        jbtLamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtLamMoiActionPerformed(evt);
            }
        });

        jLabel4.setText("Số lượng:");

        txtHangKhachHang1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHangKhachHang1ActionPerformed(evt);
            }
        });

        jLabel7.setText("Thời gian áp dụng:");

        jLabel8.setText("Thời gian kết thúc:");

        jcbNgaySinh.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        jcbThangSinh.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));
        jcbThangSinh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbThangSinhActionPerformed(evt);
            }
        });

        jcbNamSinh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbNamSinhActionPerformed(evt);
            }
        });

        jcbNgaySinh1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        jcbThangSinh1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));
        jcbThangSinh1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbThangSinh1ActionPerformed(evt);
            }
        });

        jcbNamSinh1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbNamSinh1ActionPerformed(evt);
            }
        });

        jLabel10.setText("Quà tặng:");

        jcbNgaySinh2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Không", "Phiếu mua hàng" }));
        jcbNgaySinh2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbNgaySinh2ActionPerformed(evt);
            }
        });

        jLabel11.setText("Hình thức giảm:");

        jcbNgaySinh3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Phần trăm", "Theo tiền" }));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Tên", "Điện Thoại", "Địa Chỉ", "ID Hạng Khách Hàng"
            }
        ));
        jScrollPane3.setViewportView(jTable2);

        jbtKhachHang.setText("khách hàng");
        jbtKhachHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtKhachHangActionPerformed(evt);
            }
        });

        jbtSanPham.setText("sản phẩm");
        jbtSanPham.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtSanPhamActionPerformed(evt);
            }
        });

        jLabel12.setText("Table:");

        Select.setText("Chọn Selected");
        Select.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelectActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 32, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtTen, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(12, 12, 12))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jbtXoa, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jbtSua, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jbtThem, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jbtLamMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(60, 60, 60))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtHangKhachHang1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jcbNgaySinh, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jcbThangSinh, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jcbNamSinh))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jcbNgaySinh1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jcbThangSinh1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jcbNamSinh1))
                            .addComponent(jcbNgaySinh2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jcbNgaySinh3, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtHangKhachHang)
                            .addComponent(txtDiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 556, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 556, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(txtTimKiem)
                                    .addGap(18, 18, 18))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel12)
                                    .addGap(2, 2, 2)
                                    .addComponent(jbtKhachHang)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jbtSanPham)
                                    .addGap(218, 218, 218)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jbtTimKiem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Select, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addGap(27, 27, 27))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtTen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtDiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtHangKhachHang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtHangKhachHang1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jcbNgaySinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jcbThangSinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jcbNamSinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jcbNgaySinh1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jcbThangSinh1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jcbNamSinh1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(jcbNgaySinh2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(jcbNgaySinh3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jbtTimKiem)
                            .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jbtKhachHang)
                            .addComponent(jbtSanPham)
                            .addComponent(jLabel12)
                            .addComponent(Select))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(36, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 139, Short.MAX_VALUE)
                        .addComponent(jbtThem)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbtSua)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbtXoa)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbtLamMoi)
                        .addGap(57, 57, 57))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtDiaChiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDiaChiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDiaChiActionPerformed

    private void txtHangKhachHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHangKhachHangActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHangKhachHangActionPerformed

    private void jbtThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtThemActionPerformed
        // TODO add your handling code here:
        KhuyenMai km = getkm();
        if (km == null) {
            return;
        }

        try {
            int result = qlkm.addKM(km);
            if (result == 1) {
                JOptionPane.showMessageDialog(this, "Thêm khuyến mãi thành công!");
                fillTableKM();
                clearForm();
            } else {
                JOptionPane.showMessageDialog(this, "Thêm khuyến mãi thất bại!");
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Lỗi khi thêm khuyến mãi: " + ex.getMessage());
        }
    }//GEN-LAST:event_jbtThemActionPerformed

    private void jbtSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtSuaActionPerformed
        // TODO add your handling code here:
                handleUpdateAction();
    }//GEN-LAST:event_jbtSuaActionPerformed

    private void jbtXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtXoaActionPerformed
        // TODO add your handling code here:
        handleDeleteAction();
    }//GEN-LAST:event_jbtXoaActionPerformed

    private void txtTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTimKiemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTimKiemActionPerformed

    private void jbtTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtTimKiemActionPerformed
        // TODO add your handling code here:
        handleSearchAction();
    }//GEN-LAST:event_jbtTimKiemActionPerformed

    private void txtTenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTenActionPerformed

    private void txtIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIDActionPerformed

    private void jbtLamMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtLamMoiActionPerformed

    }//GEN-LAST:event_jbtLamMoiActionPerformed

    private void txtHangKhachHang1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHangKhachHang1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHangKhachHang1ActionPerformed

    private void jcbThangSinhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbThangSinhActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbThangSinhActionPerformed

    private void jcbNamSinhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbNamSinhActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbNamSinhActionPerformed

    private void jcbThangSinh1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbThangSinh1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbThangSinh1ActionPerformed

    private void jcbNamSinh1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbNamSinh1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbNamSinh1ActionPerformed

    private void jbtKhachHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtKhachHangActionPerformed
        SwingUtilities.invokeLater(() -> {
            jTable.setModel(tablekh);
        });
    }//GEN-LAST:event_jbtKhachHangActionPerformed

    private void jbtSanPhamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtSanPhamActionPerformed
        // TODO add your handling code here:
                SwingUtilities.invokeLater(() -> {
            jTable.setModel(tablesp);
        });
    }//GEN-LAST:event_jbtSanPhamActionPerformed

    private void jcbNgaySinh2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbNgaySinh2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbNgaySinh2ActionPerformed

    private void SelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelectActionPerformed
        // TODO add your handling code here:
                int selectedRow = jTable.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một dòng từ bảng.", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }

        DefaultTableModel currentModel = (DefaultTableModel) jTable.getModel();
        String selectedId = currentModel.getValueAt(selectedRow, 0).toString(); // Assuming ID is in the first column (index 0)

        if (currentModel == tablekh) {
            if (!khid.contains(selectedId)) {
                khid.add(selectedId);
                JOptionPane.showMessageDialog(this, "ID khách hàng đã được thêm: " + selectedId);
            } else {
                JOptionPane.showMessageDialog(this, "ID khách hàng này đã tồn tại: " + selectedId);
            }
        } else if (currentModel == tablesp) {
            if (!spid.contains(selectedId)) {
                spid.add(selectedId);
                JOptionPane.showMessageDialog(this, "ID sản phẩm đã được thêm: " + selectedId);
            } else {
                JOptionPane.showMessageDialog(this, "ID sản phẩm này đã tồn tại: " + selectedId);
            }
        }
    }//GEN-LAST:event_SelectActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Select;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable;
    private javax.swing.JTable jTable2;
    private javax.swing.JButton jbtKhachHang;
    private javax.swing.JButton jbtLamMoi;
    private javax.swing.JButton jbtSanPham;
    private javax.swing.JButton jbtSua;
    private javax.swing.JButton jbtThem;
    private javax.swing.JButton jbtTimKiem;
    private javax.swing.JButton jbtXoa;
    private javax.swing.JTextField jcbNamSinh;
    private javax.swing.JTextField jcbNamSinh1;
    private javax.swing.JComboBox<String> jcbNgaySinh;
    private javax.swing.JComboBox<String> jcbNgaySinh1;
    private javax.swing.JComboBox<String> jcbNgaySinh2;
    private javax.swing.JComboBox<String> jcbNgaySinh3;
    private javax.swing.JComboBox<String> jcbThangSinh;
    private javax.swing.JComboBox<String> jcbThangSinh1;
    private java.awt.PopupMenu popupMenu1;
    private java.awt.PopupMenu popupMenu2;
    private java.awt.PopupMenu popupMenu3;
    private javax.swing.JTextField txtDiaChi;
    private javax.swing.JTextField txtHangKhachHang;
    private javax.swing.JTextField txtHangKhachHang1;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtTen;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables


    @Override
    protected String[] getColumnNames() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    @Override
    protected void setFormFromRow(int row) {
        // This is not used in this panel's logic
    }

    @Override
    protected boolean validateForm() {
        if (txtID.getText().trim().isEmpty() || txtTen.getText().trim().isEmpty() || txtDiaChi.getText().trim().isEmpty()
                || txtHangKhachHang.getText().trim().isEmpty() || txtHangKhachHang1.getText().trim().isEmpty()
                || jcbNamSinh.getText().trim().isEmpty() || jcbNamSinh1.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng điền đầy đủ thông tin.");
            return false;
        }

        if (khid.isEmpty() && spid.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn ít nhất một Khách Hàng hoặc Sản Phẩm.");
            return false;
        }
        return true;
    }

    protected KhuyenMai getkm() {
        if (!validateForm()) {
            return null;
        }
        
        try {
            String id = txtID.getText().trim();
            String idChiTiet = ""; // No corresponding field for this in the form
            String idKhachHang = khid.isEmpty() ? null : khid.stream().collect(Collectors.joining(","));
            String ten = txtTen.getText().trim();
            String moTa = txtHangKhachHang.getText().trim(); // Assuming this is the description field
            int soLuong = Integer.parseInt(txtHangKhachHang1.getText().trim());
            Date thoiGianApDung = Date.valueOf(jcbNamSinh.getText() + "-" + jcbThangSinh.getSelectedItem() + "-" + jcbNgaySinh.getSelectedItem());
            Date thoiGianKetThuc = Date.valueOf(jcbNamSinh1.getText() + "-" + jcbThangSinh1.getSelectedItem() + "-" + jcbNgaySinh1.getSelectedItem());
            
            KhuyenMai km = new KhuyenMai();
            km.setId(id);
            km.setChiTietid(idChiTiet);
            km.setKhachHangid(idKhachHang);
            km.setTen(ten);
            km.setMoTa(moTa);
            km.setSoLuong(soLuong);
            km.setThoiGianApDung(thoiGianApDung);
            km.setThoiGianKetThuc(thoiGianKetThuc);
            
            return km;
        } catch (IllegalArgumentException e) {
            JOptionPane.showMessageDialog(this, "Ngày tháng không hợp lệ hoặc số lượng không phải là số.");
            return null;
        }
    }

    @Override
    protected void clearForm() {
        txtID.setText("");
        txtTen.setText("");
        txtDiaChi.setText(""); // Assuming this is part of the form
        txtHangKhachHang.setText("");
        txtHangKhachHang1.setText("");
        jcbNamSinh.setText("");
        jcbNamSinh1.setText("");
        khid.clear();
        spid.clear();
    }

    @Override
    protected List<SanPham> getAllEntities() throws Exception {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    @Override
    protected String getEntityId(SanPham entity) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    @Override
    protected void addEntityToTable(SanPham entity) {
        // This is not used in this panel's logic
    }

    @Override
    protected int addEntity(SanPham entity) throws Exception {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    @Override
    protected int deleteEntity(String id) throws Exception {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    @Override
    protected int updateEntity(SanPham entity, String oldId) throws Exception {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}
